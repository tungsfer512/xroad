#!/bin/bash
if [ "$1" = "upgrade" ]; then
  if dpkg --compare-versions "#LAST_SUPPORTED_VERSION#" gt "$2"; then
    echo "ERROR: Upgrade supported from #LAST_SUPPORTED_VERSION# or newer" >&2
    exit 1
  fi
fi

. /usr/share/debconf/confmodule

function handle_error {
   ERR=$(</tmp/cert.err)
   db_subst xroad-common/cert-generation-error ERR "$(printf %s "$ERR" | debconf-escape -e)"
   db_input critical xroad-common/cert-generation-error
   db_go
   rm -f /tmp/cert.err
}

if [[ "$1" = "upgrade" ]]; then
  invoke-rc.d --quiet xroad-jetty stop &>/dev/null || true
  # restart nginx (to possibly free port 4000), but only if it was running
  invoke-rc.d --quiet nginx try-restart &>/dev/null || true
fi

#check certificates and request necessary subject information from user
HOST=$(hostname -f)
if (( ${#HOST} > 64 )); then
  HOST="$(hostname -s)"
fi
LIST=
for i in $(ip addr | grep 'scope global' | tr '/' ' ' | awk '{print $2}'); do LIST+="IP:$i,"; done;
ALT="${LIST}DNS:$(hostname -f),DNS:$(hostname -s)"

if [[ -f /etc/xroad/ssl/nginx.crt && -f /etc/xroad/ssl/nginx.key ]];
then
  if [[ ! -r /etc/xroad/ssl/proxy-ui-api.crt || ! -r /etc/xroad/ssl/proxy-ui-api.key || ! -r /etc/xroad/ssl/proxy-ui-api.p12 ]]
  then
    echo "found existing nginx.crt and nginx.key, migrating those to proxy-ui-api.crt, key and p12"
    mv -f /etc/xroad/ssl/nginx.crt /etc/xroad/ssl/proxy-ui-api.crt
    mv -f /etc/xroad/ssl/nginx.key /etc/xroad/ssl/proxy-ui-api.key
    rm /etc/xroad/ssl/proxy-ui-api.p12
    openssl pkcs12 -export -in /etc/xroad/ssl/proxy-ui-api.crt -inkey /etc/xroad/ssl/proxy-ui-api.key -name proxy-ui-api -out /etc/xroad/ssl/proxy-ui-api.p12 -passout pass:proxy-ui-api
    chmod -f 660 /etc/xroad/ssl/proxy-ui-api.key /etc/xroad/ssl/proxy-ui-api.crt /etc/xroad/ssl/proxy-ui-api.p12
    chown -f xroad:xroad /etc/xroad/ssl/proxy-ui-api.key /etc/xroad/ssl/proxy-ui-api.crt /etc/xroad/ssl/proxy-ui-api.p12

  else
    echo "found existing proxy-ui-api.key, crt and p12, keeping those and not migrating nginx.key and crt"
  fi
fi

while :; do
    if [[ ! -r /etc/xroad/ssl/proxy-ui-api.crt || ! -r /etc/xroad/ssl/proxy-ui-api.key || ! -r /etc/xroad/ssl/proxy-ui-api.p12 ]]
    then
       echo "Generating new proxy-ui-api.[crt|key|p12] files "
       db_subst xroad-common/proxy-ui-api-subject HOST "$HOST"
       db_subst xroad-common/proxy-ui-api-altsubject ALT "$ALT"
       RET=
       db_get xroad-common/proxy-ui-api-subject
       if [ -z "$RET"  ]
       then
          db_set xroad-common/proxy-ui-api-subject "/CN=$HOST"
       fi
       RET=
       db_get xroad-common/proxy-ui-api-altsubject
       if [ -z "$RET"  ]
       then
          db_set xroad-common/proxy-ui-api-altsubject "$ALT"
       fi
       db_input critical xroad-common/proxy-ui-api-subject || true
       db_input critical xroad-common/proxy-ui-api-altsubject || true
       db_go
       RET=
       db_get xroad-common/proxy-ui-api-subject
       subj="$RET"
       RET=
       db_get xroad-common/proxy-ui-api-altsubject
       altn="$RET"
       db_go
       rm -f /etc/xroad/ssl/proxy-ui-api.crt /etc/xroad/ssl/proxy-ui-api.key
       echo "generating new webUI TLS key/certificate with $subj and $altn"
       /usr/share/xroad/scripts/generate_certificate.sh  -n proxy-ui-api -s "${subj}" -a "${altn}" -p 2> /tmp/cert.err || handle_error
    else
      break
    fi
done

db_stop

